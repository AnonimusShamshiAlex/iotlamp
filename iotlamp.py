import socket
from yeelight import discover_bulbs, Bulb
import tinytuya
import time
import requests

# –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã –¥–ª—è —É–º–Ω—ã—Ö –ª–∞–º–ø
COMMON_PORTS = {
    "Yeelight": [55443, 1982],
    "Tuya": [6666, 6668],
    "Xiaomi": [54321, 5353],
    "Tapo": [80, 443],
    "Tasmota/ESPHome": [80, 8080, 8888],
    "Generic": [5353, 5683, 8888]
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—Ç—ã –ø–æ –º–æ–¥–µ–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
def get_possible_ports(model):
    model = model.lower()
    if "yeelight" in model:
        return COMMON_PORTS["Yeelight"]
    if "tuya" in model or "gauss" in model or "luazon" in model:
        return COMMON_PORTS["Tuya"]
    if "xiaomi" in model:
        return COMMON_PORTS["Xiaomi"]
    if "tapo" in model:
        return COMMON_PORTS["Tapo"]
    if "tasmota" in model or "esphome" in model:
        return COMMON_PORTS["Tasmota/ESPHome"]
    return COMMON_PORTS["Generic"]

# –ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω—É–∂–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤
def scan_ports(ip, ports):
    open_ports = []
    for port in ports:
        try:
            with socket.create_connection((ip, port), timeout=0.5):
                open_ports.append(port)
        except:
            continue
    return open_ports

# üü° Tasmota ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ HTTP
def control_tasmota(ip):
    action = input("–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –ª–∞–º–ø—É? [on/off]: ").strip().lower()
    try:
        if action == "on":
            r = requests.get(f"http://{ip}/cm?cmnd=Power%20On", timeout=2)
        elif action == "off":
            r = requests.get(f"http://{ip}/cm?cmnd=Power%20Off", timeout=2)
        else:
            print("‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
            return
        if r.status_code == 200:
            print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.")
        else:
            print("‚ö† –û—à–∏–±–∫–∞:", r.status_code)
    except Exception as e:
        print("‚ö† –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:", e)

# üî∑ Tuya ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ tinytuya
def control_tuya(ip, device_id, local_key):
    d = tinytuya.OutletDevice(device_id, ip, local_key)
    d.set_version(3.3)  # –≤–∞–∂–Ω–æ –¥–ª—è –Ω–æ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    action = input("–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –ª–∞–º–ø—É? [on/off]: ").strip().lower()
    try:
        if action == "on":
            d.turn_on()
            print("‚úÖ –õ–∞–º–ø–∞ –≤–∫–ª—é—á–µ–Ω–∞.")
        elif action == "off":
            d.turn_off()
            print("‚úÖ –õ–∞–º–ø–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞.")
        else:
            print("‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
    except Exception as e:
        print("‚ö† –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Tuya:", e)

# üîµ Yeelight
def scan_yeelight():
    print("üì° –ò—â—É Yeelight-–ª–∞–º–ø—ã...")
    bulbs = discover_bulbs(timeout=4)
    results = []
    for b in bulbs:
        ip = b.get("ip")
        model = b.get("model", "Yeelight")
        ports = get_possible_ports(model)
        open_ports = scan_ports(ip, ports)
        results.append({"brand": "Yeelight", "ip": ip, "model": model, "ports": open_ports})
    return results

# üî∂ Tuya, Gauss, Luazon
def scan_tuya():
    print("üì° –ò—â—É Tuya-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞...")
    try:
        devices = tinytuya.deviceScan()
        results = []
        for ip, data in devices.items():
            results.append({
                "brand": "Tuya",
                "ip": ip,
                "model": data.get("product", "Tuya"),
                "ports": scan_ports(ip, COMMON_PORTS["Tuya"])
            })
        return results
    except Exception as e:
        print("‚ö† –û—à–∏–±–∫–∞ Tuya-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", e)
        return []

# üåê –ü—Ä–æ—á–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ‚Äî Xiaomi, Tapo, Yandex –∏ –ø—Ä–æ—á–µ–µ
def scan_generic():
    print("üì° –°–∫–∞–Ω–∏—Ä—É—é –æ—Å—Ç–∞–ª—å–Ω—ã–µ IP...")
    try:
        prefix = ".".join(socket.gethostbyname(socket.gethostname()).split(".")[:3])
    except:
        prefix = "192.168.1"  # fallback
    ips = [f"{prefix}.{i}" for i in range(1, 255)]
    found = []
    for ip in ips:
        ports = scan_ports(ip, COMMON_PORTS["Generic"] + COMMON_PORTS["Xiaomi"] + COMMON_PORTS["Tapo"])
        if ports:
            brand = "Other"
            if 54321 in ports:
                brand = "Xiaomi"
            elif 443 in ports or 80 in ports:
                brand = "Tapo/Yandex"
            found.append({
                "brand": brand,
                "ip": ip,
                "model": "Unknown",
                "ports": ports
            })
    return found

# üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Yeelight
def control_yeelight(ip):
    try:
        bulb = Bulb(ip)
        action = input("–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –ª–∞–º–ø—É? [on/off]: ").strip().lower()
        if action == "on":
            bulb.turn_on()
            print("‚úÖ –õ–∞–º–ø–∞ –≤–∫–ª—é—á–µ–Ω–∞.")
        elif action == "off":
            bulb.turn_off()
            print("‚úÖ –õ–∞–º–ø–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞.")
        else:
            print("‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
    except Exception as e:
        print("‚ö† –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Yeelight:", e)

# üîÅ –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
def main():
    all_devices = []
    all_devices += scan_yeelight()
    all_devices += scan_tuya()
    all_devices += scan_generic()

    if not all_devices:
        print("‚ùå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    print("\nüîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:")
    for i, d in enumerate(all_devices, 1):
        print(f"{i}. {d['brand']} ({d['ip']}) ‚Äî {d['model']}")
        print(f"   ‚ñ∏ –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã: {d['ports'] or '–Ω–µ—Ç'}")

    try:
        choice = int(input("\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ")) - 1
        dev = all_devices[choice]

        if dev["brand"] == "Yeelight":
            control_yeelight(dev["ip"])
        elif dev["brand"] == "Tuya":
            device_id = input("–í–≤–µ–¥–∏ device_id: ").strip()
            local_key = input("–í–≤–µ–¥–∏ local_key: ").strip()
            control_tuya(dev["ip"], device_id, local_key)
        elif dev["brand"].startswith("Tasmota") or 80 in dev["ports"]:
            control_tasmota(dev["ip"])
        else:
            print("‚ö† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç—Ç–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")
    except Exception as e:
        print("‚ö† –û—à–∏–±–∫–∞:", e)

if __name__ == "__main__":
    main()
